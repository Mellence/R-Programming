q()
q()
x <- 4
class(x)
x <- c(4, TRUE)
class(x)
x <-c(1,3,5)
y <-c(3, 2, 10)
x <-c(1, 3, 5)
rbind(x,y)
install.packages("KernSmooth")
load(KernSmooth)
library(KernSmooth)
getwd()
getwd()
install.packages("swirl")
library("swirl")
swirl()
5+7
x <- 5+7
x
y <- x - 3
y
z <- c(1.1, 9, 3.14)
?c
z
c(z, 555, z)
z * 2 + 100
my_sqrt <- z - 1
my_sqrt <- sqrt(z - 1)
my_sqrt
my_div <- z / my_sqrt
my_div
c(1, 2, 3, 4) c(0, 10)
c(1, 2, 3, 4) + c(0, 10)
c(1, 2, 3, 4) + c(0, 10, 100)
z * 2 + 1000
my_div
bye()
exit
exit(*)
exit()
quit()
swirl()
library("swirl")
ls()
rm(list=ls())
swirl()
getwd()
ls()
x <- 9
ls()
list.files()
?list.files
args(list.files())
args(list.files)
old.dir(dir())
old.dir <- dir()
old.dir <- getwd()
dir.create("testdir")
setwd("testdir")
file.create(mytest.R)
file.create("|mytest.R)
v
gaefrd
x
)
""
""
file.create("mytest.R")
ls()
dir()
file.exists("mytest.R")
file.info("mytest.R")
file.rename("mytest.R", "mytest2.R")
file.copy("mytest2.R", mytest3.R)
file.copy("mytest2.R", "mytest3.R")
args(file.path)
file.path("mytest3.R")
file.path("folder1", "folder2")
?dir.create
dir.create("testdir2")
dir.create(file.path('testdir2', 'testdir3'))
dir.create(file.path('testdir2', 'testdir3'), recursive = TRUE)
unlink("testdir2", recursive = TRUE)
setwd(old.dir)
unlink("testdir", recursive = TRUE)
1:20
pi:10
15:12
15:1
?`:`
seq(1, 20)
seq(0, 10, by=0.5)
my_seq <- seq(5, 10, length=30)
length(my_seq)
1:length(my_seq)
seq(along.with = my_seq)
seq_along(my_seq)
rep(0, times = 40)
rep(c(0, 1, 2), times = 10)
rep(c(0, 1, 2), each = 10)
num_vect <- c(0.5, 55, -10, 6)
tf <- num_vect < 1
tf
num_vect >= 6
my_char <- c("My", "name", "is")
my_char
paste(my_char, collapse= " ")
c(my_char, "Michael")
my_name <-c(my_char, "Michael")
my_name
paste(my_name, collapse = " ")
paste("Hello", "world1", sep = " ")
paste("Hello", "world!", sep = " ")
paste(1:3, c("X", "Y", "Z"), sep= "")
paste(LETERS, 1:4, sep = "-")
paste(LETTERS, 1:4, sep = "-")
play()
ls()
rm
?rm
rm(list = ls())
nxt()
x <- c(44, NA, 5, NA)
x * 3
y <- rnorm(1000)
z <- rep(NA, 1000)
my_data <- sample(c(y, z), 100)
my_na <- is.na(mydata)
my_na <- is.na(my_data)
my_na
my_data == NA
sum(my_na)
my_data
0/0
Inf - Inf
rm(ls())
rm
rm()
rm(list = ls())
setwd(C:\Users\Mellence\Desktop\Coursera Classes\R-Programming\Week1)
setwd(\Users\Mellence\Desktop\Coursera Classes\R-Programming\Week1)
?setwd
setwd(dir = "C:\Users\Mellence\Desktop\Coursera Classes\R-Programming\Week1")
setwd(dir = ../)
setwd(dir = "../")
setwd(dir = "../Desktop/Coursera Classes")
setwd(dir = "../Desktop/Coursera\ Classes")
setwd(dir = "Desktop/Coursera Classes/R-Programming/Week1/")
ls
dir
dir()
my_data <- read.csv("hw1_data.csv")
bad <- is.na(my_data)
sum(bad)
bad <- is.na(my_data[1])
sum(bad)
mean(my_data[1])
swilr
swirl()
x
x[1:10]
x[is.na(s)]
x[is.na(x)]
y <-x[!is.na(x)]
y
y[y > 0]
x[x > 0]
x[!is.na(x) & x > 0]
x[c(3, 5, 7)]
x[0]
x[3000]
x[c(-2, -10)]
x[-c(2, 10)]
vect <- c(foo = 1, bar = 2, norf = NA)
vect <- c(foo = 11, bar = 2, norf = NA)
vect
names(vect)
vect2(c(11, 2, NA))
vect2 <- c(11, 2, NA)
names(vect2 <- c("foo", "bar", "norf"))
names(vect2, c("foo", "bar", "norf"))
names(vect2) <- c("foo", "bar", "norf")
identical(vect, vect2)
vect["bar"]
vect[c("foo", "bar")]
my_vector <- 1:20
my_data
my_vector
dim(my_vector)
play()
my_vector <- 1:20
nxt()
length(my_vector)
dim(my_vector) <- c(4, 5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix <- my_vector
?matrix
matrix(nrow = 4, ncol = 5)
matrix(data = 1:230nrow = 4, ncol = 5,)
matrix(data = 1:20, nrow = 4, ncol = 5,)
my_matrix2 <- matrix(data = 1:20, nrow = 4, ncol = 5,)
identical(my_matrix, my_matrix2)
patients <- c("Bill", "Gina", "Kelly", "Sean")
cbind(patients, my_matrix)
my_data <- data.frame(patients, my_matrix)
my_data
class(my_data)
cnames <- c("patient", "age", "weight", "bp", "rating", "test")
colnames(my_data) <- cnames
my_data
quit()
